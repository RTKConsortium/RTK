itk_wrap_class("itk::InPlaceImageFilter" POINTER)

  # Wrap ITK double missing types --
  if (NOT ITK_WRAP_double)
    itk_wrap_template("ID1ID1" "itk::Image<${ITKT_D}, 1>, itk::Image<${ITKT_D}, 1>")
    itk_wrap_template("ID3ID2" "itk::Image<${ITKT_D}, 3>, itk::Image<${ITKT_D}, 2>")
  endif()

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
    itk_wrap_template("IF1IF1" "itk::Image<${ITKT_F}, 1>, itk::Image<${ITKT_F}, 1>")
	if (ITK_WRAP_double)
      itk_wrap_template("ID1ID1" "itk::Image<${ITKT_D}, 1>, itk::Image<${ITKT_D}, 1>")
    endif()
  endif()

  # Wrap ITK unsigned short missing types
  if (NOT ITK_WRAP_unsigned_short)
    itk_wrap_template("IUS2IUS2" "itk::Image<${ITKT_US}, 2>, itk::Image<${ITKT_US}, 2>")
    itk_wrap_template("IUS3IUS3" "itk::Image<${ITKT_US}, 3>, itk::Image<${ITKT_US}, 3>")
  endif()

  # Wrap ITK unsigned short combination (required by : rtkLookupTableImageFilter)
  if (NOT ITK_WRAP_unsigned_short)
    foreach(t ${WRAP_ITK_REAL})
      itk_wrap_template("IUS2I${ITKM_${t}}2" "itk::Image<${ITKT_US}, 2>, itk::Image<${ITKT_${t}}, 2>")
      itk_wrap_template("IUS3I${ITKM_${t}}3" "itk::Image<${ITKT_US}, 3>, itk::Image<${ITKT_${t}}, 3>")
    endforeach()
    list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
    if (NOT ${_index} EQUAL -1)
      itk_wrap_template("IUS1IF1" "itk::Image<${ITKT_US}, 1>, itk::Image<${ITKT_F}, 1>")
    endif()
  endif()

  # Wrap ITK unsigned int missing types
  foreach(t ${WRAP_ITK_REAL})
    itk_wrap_template("IUI2I${ITKM_${t}}2" "itk::Image<${ITKT_UI}, 2>, itk::Image<${ITKT_${t}}, 2>")
    itk_wrap_template("IUI3I${ITKM_${t}}3" "itk::Image<${ITKT_UI}, 3>, itk::Image<${ITKT_${t}}, 3>")
  endforeach()

  # Wrap ITK short combination (required by : rtkLookupTableImageFilter)
  if (NOT ITK_WRAP_signed_short)
    itk_wrap_template("ISS3IF3" "itk::Image<${ITKT_SS}, 3>, itk::Image<${ITKT_F}, 3>")
  endif()

  # Wrap ITK real type combination
  itk_wrap_template("IF3ID2" "itk::Image<${ITKT_F}, 3>, itk::Image<${ITKT_D}, 2>")

  if(RTK_USE_CUDA)

    itk_wrap_include(itkCudaImage.h)

    foreach(d ${ITK_WRAP_IMAGE_DIMS})
      itk_wrap_template("CI${ITKM_F}${d}" "itk::CudaImage<${ITKT_F}, ${d}>")
    endforeach()

    # Wrap ITK dimension 4 CUDA missing types
    list(FIND ITK_WRAP_IMAGE_DIMS "4" _index)
    if (${_index} EQUAL -1)
      itk_wrap_template("CIF4CIF4" "itk::CudaImage<${ITKT_F}, 4>, itk::CudaImage<${ITKT_F}, 4>")
    endif()

    # Force VECTOR_COMPONENTS to "2;3;4;5"
    UNIQUE(imageDimensions "${ITK_WRAP_IMAGE_DIMS};2;3;4")
    UNIQUE(vectorComponents "${ITK_WRAP_VECTOR_COMPONENTS};2;3;4;5")
    foreach(component ${vectorComponents})
      foreach(d ${imageDimensions})
        itk_wrap_template("CI${ITKM_VF${component}}${d}" "itk::CudaImage<${ITKT_VF${component}}, ${d}>")
        itk_wrap_template("CI${ITKM_VF${component}}${d}CI${ITKM_VF${component}}${d}"
          "itk::CudaImage<${ITKT_VF${component}}, ${d}>, itk::CudaImage<${ITKT_VF${component}}, ${d}>")
      endforeach()
    endforeach()

  endif()

  # Force ITK_WRAP_IMAGE_DIMS to contain "2;3;4"
  UNIQUE(imageDimensions "${ITK_WRAP_IMAGE_DIMS};2;3;4")
  set(vectorComponents 2 3 4 5)
  foreach(component ${vectorComponents})
    list(FIND ITK_WRAP_VECTOR_COMPONENTS "${component}" _index)
    if (${_index} EQUAL -1)
      foreach(vt ${WRAP_ITK_VECTOR_REAL})
        foreach(d ${imageDimensions})
          itk_wrap_template("I${ITKM_${vt}${component}}${d}I${ITKM_${vt}${component}}${d}"
            "itk::Image<${ITKT_${vt}${component}}, ${d}>, itk::Image<${ITKT_${vt}${component}}, ${d}>")
        endforeach()
      endforeach()
    endif()
  endforeach()

  # Force ITK_WRAP_VECTOR_COMPONENTS to contain "2;3;4;5"
  UNIQUE(vectorComponents "${ITK_WRAP_VECTOR_COMPONENTS};2;3;4;5")

  # Force ITK_WRAP_IMAGE_DIMS to contain "2;3;4"
  set(imageDimensions 2 3 4)
  foreach(d ${imageDimensions})
    list(FIND ITK_WRAP_IMAGE_DIMS "${d}" _index)
    if (${_index} EQUAL -1)
      foreach(vt ${WRAP_ITK_VECTOR_REAL})
        foreach(component ${ITK_WRAP_VECTOR_COMPONENTS})
          itk_wrap_template("I${ITKM_${vt}${component}}${d}I${ITKM_${vt}${component}}${d}"
            "itk::Image<${ITKT_${vt}${component}}, ${d}>, itk::Image<${ITKT_${vt}${component}}, ${d}>")
        endforeach()
      endforeach()
    endif()
  endforeach()

  itk_wrap_template("VI${ITKM_F}3VI${ITKM_F}3"
        "itk::VectorImage<${ITKT_F}, 3>, itk::VectorImage<${ITKT_F}, 3>")

  if (ITK_WRAP_double)
    itk_wrap_template("VI${ITKM_D}3VI${ITKM_D}3"
          "itk::VectorImage<${ITKT_D}, 3>, itk::VectorImage<${ITKT_D}, 3>")
  endif()
itk_end_wrap_class()
